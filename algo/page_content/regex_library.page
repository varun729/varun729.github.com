%ORDER
1338403482
%$

%TITLE
regex library
%$

%DATE
Thursday, May 31, 2012
%$

%CONTENT
<p>
I was once suggested that to learn low level nuances of programming, it is a
good idea to start with a good project. One such project which I was suggested
was to write a regex library for C. It has been long since I have thought about
it seriously. Now that I am reading Theory of Computation, and specifically
about regular expressions and regular languages, I thought of trying to create a
library.
</p>

<p>
<b>API structure ideas:</b><br />
<ul>
        <li>regex structure object</li>
        <li>function to check if a string matches a regex expression</li>
        <li>function to check location of substring where a string matches a
        regex expression</li>
        <li>how many times a string matches the regex expression</li>
        <li>search and replace a regex expression</li>
</ul>
</p>

<p>
<b>Scoping:</b>
</p>
<p>
To identify a regular expression an object will be created which contains the
basic information regarding the pattern which is to be searched. The pattern
object will have the following properties:
<ol>
        <li>The pattern string</li>
        <li>List of tokens in the pattern. Tokens are the sequence of characters
        in the pattern (including spaces) separated by special pattern such as:
        '.*' or '.+' .</li>
        <li>'^' and '$' are used to signify start and end of the search string.
        This is a special part of the pattern, which should be kept as a
        attribute to the pattern.</li>
        <li>Other features later...</li>
</ol>
</p>
%$
